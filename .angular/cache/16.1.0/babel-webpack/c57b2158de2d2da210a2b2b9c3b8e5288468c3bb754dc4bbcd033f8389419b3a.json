{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(http, inventoryService) {\n    this.http = http;\n    this.inventoryService = inventoryService;\n    this.model = {};\n    this.createMode = false;\n    this.historyMode = false;\n    this.batchesMode = false;\n  }\n  ngOnInit() {}\n  loadBatches() {\n    this.http.get('https://localhost:5001/api/batches').subscribe({\n      next: response => this.batches = response\n    });\n  }\n  orderBatches() {\n    this.batchesMode = !this.batchesMode;\n    if (!this.batchesMode) return;\n    this.http.get('https://localhost:5001/api/batches/order').subscribe({\n      next: response => this.batches = response\n    });\n  }\n  search() {\n    //this.inventoryService.search(this.model).subscribe;\n  }\n  openCreate() {\n    this.createMode = true;\n  }\n  seeAll() {\n    this.batchesMode = !this.batchesMode;\n    if (!this.batchesMode) return;\n    this.http.get('https://localhost:5001/api/batches').subscribe({\n      next: response => this.batches = response,\n      error: error => console.log(error),\n      complete: () => console.log('Request has completed')\n    });\n  }\n  cancelCreateMode(event) {\n    this.createMode = event;\n  }\n  seeHistory() {\n    this.historyMode = !this.historyMode;\n    if (!this.historyMode) return;\n    this.http.get('https://localhost:5001/api/batches/history').subscribe({\n      next: response => this.logs = response,\n      error: error => console.log(error),\n      complete: () => console.log('Request has completed')\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","http","inventoryService","model","createMode","historyMode","batchesMode","ngOnInit","loadBatches","get","subscribe","next","response","batches","orderBatches","search","openCreate","seeAll","error","console","log","complete","cancelCreateMode","event","seeHistory","logs","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gogre\\InventorySystem\\client\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Batch } from './models/Batch';\nimport { InventoryService } from './_services/Inventory.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  batches: any;\n  logs: any;\n  model: any = {}\n\n  createMode = false;\n  historyMode = false;\n  batchesMode = false;\n  \n\n  constructor(private http: HttpClient, private inventoryService : InventoryService) {}\n\n  ngOnInit() {\n  }\n\n  loadBatches() {\n    this.http.get('https://localhost:5001/api/batches').subscribe({\n      next: response => this.batches = response,\n     })\n    }\n\n    orderBatches(){\n      this.batchesMode = !this.batchesMode;\n      if(!this.batchesMode) return;\n\n      this.http.get('https://localhost:5001/api/batches/order').subscribe({\n      next: response => this.batches = response,\n      })\n    }\n\n    search() {\n      //this.inventoryService.search(this.model).subscribe;\n    }\n  \n    openCreate() {\n      this.createMode = true;    \n    }\n  \n    seeAll() {\n      this.batchesMode = !this.batchesMode;\n      if(!this.batchesMode) return;\n\n      this.http.get('https://localhost:5001/api/batches').subscribe({\n        next: response => this.batches = response,\n        error: error => console.log(error),\n        complete: () => console.log('Request has completed')\n    })\n  }\n\n    cancelCreateMode(event: boolean)\n    {\n      this.createMode = event;\n  }\n  \n    seeHistory() {\n      this.historyMode = !this.historyMode;\n      if(!this.historyMode) return;\n\n      this.http.get('https://localhost:5001/api/batches/history').subscribe({\n        next: response => this.logs = response,\n        error: error => console.log(error),\n        complete: () => console.log('Request has completed')\n    })    \n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAUvBC,YAAoBC,IAAgB,EAAUC,gBAAmC;IAA7D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAP9D,KAAAC,KAAK,GAAQ,EAAE;IAEf,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,WAAW,GAAG,KAAK;EAGiE;EAEpFC,QAAQA,CAAA,GACR;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,oCAAoC,CAAC,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD;KACjC,CAAC;EACH;EAEAE,YAAYA,CAAA;IACV,IAAI,CAACR,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;IACpC,IAAG,CAAC,IAAI,CAACA,WAAW,EAAE;IAEtB,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,0CAA0C,CAAC,CAACC,SAAS,CAAC;MACpEC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD;KAChC,CAAC;EACJ;EAEAG,MAAMA,CAAA;IACJ;EAAA;EAGFC,UAAUA,CAAA;IACR,IAAI,CAACZ,UAAU,GAAG,IAAI;EACxB;EAEAa,MAAMA,CAAA;IACJ,IAAI,CAACX,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;IACpC,IAAG,CAAC,IAAI,CAACA,WAAW,EAAE;IAEtB,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,oCAAoC,CAAC,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD,QAAQ;MACzCM,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClCG,QAAQ,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,uBAAuB;KACtD,CAAC;EACJ;EAEEE,gBAAgBA,CAACC,KAAc;IAE7B,IAAI,CAACnB,UAAU,GAAGmB,KAAK;EAC3B;EAEEC,UAAUA,CAAA;IACR,IAAI,CAACnB,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;IACpC,IAAG,CAAC,IAAI,CAACA,WAAW,EAAE;IAEtB,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAC,4CAA4C,CAAC,CAACC,SAAS,CAAC;MACpEC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACa,IAAI,GAAGb,QAAQ;MACtCM,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClCG,QAAQ,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,uBAAuB;KACtD,CAAC;EACJ;CACD;AAhEYrB,YAAY,GAAA2B,UAAA,EALxB5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACW9B,YAAY,CAgExB"},"metadata":{},"sourceType":"module","externalDependencies":[]}