{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(http, inventoryService) {\n    this.http = http;\n    this.inventoryService = inventoryService;\n    this.model = {};\n    this.registerMode = false;\n  }\n  ngOnInit() {}\n  loadBatches() {\n    console.log(\"LOADED\");\n    this.http.get('https://localhost:5001/api/batches').subscribe({\n      next: response => this.batches = response\n    });\n  }\n  orderBatches() {\n    console.log(\"ORDERED\");\n    this.http.get('https://localhost:5001/api/batches/order').subscribe({\n      next: response => this.batches = response\n    });\n  }\n  search() {\n    //this.inventoryService.search(this.model).subscribe;\n  }\n  create() {\n    this.registerMode = event;\n    //this.inventoryService.search(this.model).subscribe;\n  }\n\n  sort() {\n    this.http.get('https://localhost:5001/api/batches/order').subscribe({\n      next: response => this.batches = response,\n      error: error => console.log(error),\n      complete: () => console.log('Request has completed')\n    });\n  }\n  seeAll() {\n    this.http.get('https://localhost:5001/api/batches').subscribe({\n      next: response => this.batches = response,\n      error: error => console.log(error),\n      complete: () => console.log('Request has completed')\n    });\n  }\n  cancelResgisterMode(event) {\n    this.registerMode = event;\n  }\n  seeHistory() {\n    // this.inventoryService.search(this.model).subscribe\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","http","inventoryService","model","registerMode","ngOnInit","loadBatches","console","log","get","subscribe","next","response","batches","orderBatches","search","create","event","sort","error","complete","seeAll","cancelResgisterMode","seeHistory","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gogre\\InventorySystem\\client\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Batch } from './models/Batch';\nimport { InventoryService } from './_services/Inventory.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  batches: any;\n  model: any = {}\n  registerMode = false;\n\n  constructor(private http: HttpClient, private inventoryService : InventoryService) {}\n\n  ngOnInit() {\n  }\n\n  loadBatches() {\n    console.log(\"LOADED\");\n    this.http.get('https://localhost:5001/api/batches').subscribe({\n      next: response => this.batches = response,\n     })\n    }\n\n    orderBatches(){\n      console.log(\"ORDERED\");\n      this.http.get('https://localhost:5001/api/batches/order').subscribe({\n      next: response => this.batches = response,\n      })\n    }\n\n    search() {\n      //this.inventoryService.search(this.model).subscribe;\n    }\n  \n    create() {\n      this.registerMode = event;\n      //this.inventoryService.search(this.model).subscribe;\n    \n    }\n    sort() {\n      this.http.get('https://localhost:5001/api/batches/order').subscribe({\n        next: response => this.batches = response,\n        error: error => console.log(error),\n        complete: () => console.log('Request has completed')\n    })\n  }\n  \n    seeAll() {\n      this.http.get('https://localhost:5001/api/batches').subscribe({\n        next: response => this.batches = response,\n        error: error => console.log(error),\n        complete: () => console.log('Request has completed')\n    })\n  }\n\n  cancelResgisterMode(event: boolean)\n  {\n    this.registerMode = event;\n  }\n  \n    seeHistory() {\n     // this.inventoryService.search(this.model).subscribe\n    }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAoBC,IAAgB,EAAUC,gBAAmC;IAA7D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAH9D,KAAAC,KAAK,GAAQ,EAAE;IACf,KAAAC,YAAY,GAAG,KAAK;EAEgE;EAEpFC,QAAQA,CAAA,GACR;EAEAC,WAAWA,CAAA;IACTC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,oCAAoC,CAAC,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD;KACjC,CAAC;EACH;EAEAE,YAAYA,CAAA;IACVP,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,0CAA0C,CAAC,CAACC,SAAS,CAAC;MACpEC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD;KAChC,CAAC;EACJ;EAEAG,MAAMA,CAAA;IACJ;EAAA;EAGFC,MAAMA,CAAA;IACJ,IAAI,CAACZ,YAAY,GAAGa,KAAK;IACzB;EAEF;;EACAC,IAAIA,CAAA;IACF,IAAI,CAACjB,IAAI,CAACQ,GAAG,CAAC,0CAA0C,CAAC,CAACC,SAAS,CAAC;MAClEC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD,QAAQ;MACzCO,KAAK,EAAEA,KAAK,IAAIZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;MAClCC,QAAQ,EAAEA,CAAA,KAAMb,OAAO,CAACC,GAAG,CAAC,uBAAuB;KACtD,CAAC;EACJ;EAEEa,MAAMA,CAAA;IACJ,IAAI,CAACpB,IAAI,CAACQ,GAAG,CAAC,oCAAoC,CAAC,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD,QAAQ;MACzCO,KAAK,EAAEA,KAAK,IAAIZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;MAClCC,QAAQ,EAAEA,CAAA,KAAMb,OAAO,CAACC,GAAG,CAAC,uBAAuB;KACtD,CAAC;EACJ;EAEAc,mBAAmBA,CAACL,KAAc;IAEhC,IAAI,CAACb,YAAY,GAAGa,KAAK;EAC3B;EAEEM,UAAUA,CAAA;IACT;EAAA;CAEJ;AAzDYxB,YAAY,GAAAyB,UAAA,EALxB1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACW5B,YAAY,CAyDxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}