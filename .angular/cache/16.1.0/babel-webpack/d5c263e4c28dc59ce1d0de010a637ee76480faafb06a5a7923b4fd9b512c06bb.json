{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(http, inventoryService) {\n    this.http = http;\n    this.inventoryService = inventoryService;\n  }\n  ngOnInit() {\n    //this.loadBatches();\n    /* this.http.get('https://localhost:5001/api/batches').subscribe({\n     next: response => this.batches = response,\n     error: error => console.log(error),\n     complete: () => console.log('Request has completed')\n    })*/\n  }\n  loadBatches() {\n    console.log(\"LOADED\");\n    this.http.get('https://localhost:5001/api/batches').subscribe({\n      next: response => this.batches = response\n    });\n  }\n  orderBatches() {\n    console.log(\"ORDERED\");\n    this.http.get('https://localhost:5001/api/batches/order').subscribe({\n      next: response => this.batches = response\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","http","inventoryService","ngOnInit","loadBatches","console","log","get","subscribe","next","response","batches","orderBatches","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gogre\\InventorySystem\\client\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Batch } from './models/Batch';\nimport { InventoryService } from './_services/Inventory.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  batches: any;\n\n  constructor(private http: HttpClient, private inventoryService : InventoryService) {}\n\n  ngOnInit() {\n    //this.loadBatches();\n\n   /* this.http.get('https://localhost:5001/api/batches').subscribe({\n    next: response => this.batches = response,\n    error: error => console.log(error),\n    complete: () => console.log('Request has completed')\n  })*/\n  }\n\n  loadBatches() {\n    console.log(\"LOADED\");\n    this.http.get('https://localhost:5001/api/batches').subscribe({\n      next: response => this.batches = response,\n     })\n    }\n\n    orderBatches(){\n      console.log(\"ORDERED\");\n      this.http.get('https://localhost:5001/api/batches/order').subscribe({\n      next: response => this.batches = response,\n      })\n    }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,IAAgB,EAAUC,gBAAmC;IAA7D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,gBAAgB,GAAhBA,gBAAgB;EAAsB;EAEpFC,QAAQA,CAAA;IACN;IAED;;;;;EAAA;EAODC,WAAWA,CAAA;IACTC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,oCAAoC,CAAC,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD;KACjC,CAAC;EACH;EAEAE,YAAYA,CAAA;IACVP,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,0CAA0C,CAAC,CAACC,SAAS,CAAC;MACpEC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD;KAChC,CAAC;EACJ;CACH;AA5BYX,YAAY,GAAAc,UAAA,EALxBf,SAAS,CAAC;EACTgB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWjB,YAAY,CA4BxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}