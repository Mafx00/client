{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(http, InventoryService, service) {\n    this.http = http;\n    this.InventoryService = InventoryService;\n    this.batches = [];\n  }\n  ngOnInit() {\n    this.loadBatches();\n    /* this.http.get('https://localhost:5001/api/batches').subscribe({\n     next: response => this.batches = response,\n     error: error => console.log(error),\n     complete: () => console.log('Request has completed')\n    })*/\n  }\n\n  loadBatches() {\n    getNewBooks().subscribe(res => {\n      this.books = res.body;\n    }, res => this.onError(res.message));\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","http","InventoryService","service","batches","ngOnInit","loadBatches","getNewBooks","subscribe","res","books","body","onError","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gogre\\InventorySystem\\client\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Batch } from './models/Batch';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  batches: Batch[] = [];\n\n  constructor(private http: HttpClient, private InventoryService service) {}\n\n  ngOnInit() {\n    this.loadBatches();\n\n   /* this.http.get('https://localhost:5001/api/batches').subscribe({\n    next: response => this.batches = response,\n    error: error => console.log(error),\n    complete: () => console.log('Request has completed')\n  })*/\n  }\n\n  loadBatches() {\n    .getNewBooks().subscribe((res: HttpResponse<IBook[]>) => {\n      this.books = res.body;\n    }, (res: HttpErrorResponse) => this.onError(res.message));\n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,IAAgB,EAAUC,gBAAgB,EAACC,OAAO;IAAlD,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAF9D,KAAAE,OAAO,GAAY,EAAE;EAEoD;EAEzEC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;IAEnB;;;;;EAKD;;EAEAA,WAAWA,CAAA;IACRC,WAAW,EAAE,CAACC,SAAS,CAAEC,GAA0B,IAAI;MACtD,IAAI,CAACC,KAAK,GAAGD,GAAG,CAACE,IAAI;IACvB,CAAC,EAAGF,GAAsB,IAAK,IAAI,CAACG,OAAO,CAACH,GAAG,CAACI,OAAO,CAAC,CAAC;EAC3D;CAED;AArBYd,YAAY,GAAAe,UAAA,EALxBhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWlB,YAAY,CAqBxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}