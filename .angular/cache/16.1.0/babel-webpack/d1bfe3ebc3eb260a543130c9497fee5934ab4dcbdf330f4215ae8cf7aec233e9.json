{"ast":null,"code":"import { Observable, ReplaySubject, map } from 'rxjs';\nimport { Batch } from '../models/Batch';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class InventoryService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/api/';\n    this.currentBatchSource = new ReplaySubject(1);\n    this.currentBatches = this.currentBatchSource.asObservable();\n    this.newBatch = new Batch();\n  }\n  getAllBatches() {\n    return this.http.get(this.baseUrl + 'branches/');\n  }\n  create(model) {\n    console.log(\"\");\n    addHero(hero, Hero);\n    Observable < Hero > {\n      return: this.http.post(this.heroesUrl, hero, httpOptions).pipe(catchError(this.handleError('addHero', hero))),\n      return: this.http.post(this.baseUrl + 'create', model).pipe(map(batch => {\n        if (batch) {\n          localStorage.setItem('batch', JSON.stringify(batch));\n          this.currentBatchSource.next(batch);\n        } else console.log(\"reached far\");\n      }))\n    };\n    search(model, any);\n    {\n      return this.http.get(this.baseUrl + 'branches/', model);\n    }\n  }\n}\nInventoryService.ɵfac = function InventoryService_Factory(t) {\n  return new (t || InventoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nInventoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InventoryService,\n  factory: InventoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Observable","ReplaySubject","map","Batch","InventoryService","constructor","http","baseUrl","currentBatchSource","currentBatches","asObservable","newBatch","getAllBatches","get","create","model","console","log","addHero","hero","Hero","return","post","heroesUrl","httpOptions","pipe","catchError","handleError","batch","localStorage","setItem","JSON","stringify","next","search","any","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gogre\\InventorySystem\\client\\src\\app\\_services\\Inventory.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, map } from 'rxjs';\nimport { Batch } from '../models/Batch';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n  baseUrl = 'https://localhost:5001/api/'\n  private currentBatchSource = new ReplaySubject<Batch>(1);\n  currentBatches = this.currentBatchSource.asObservable();\n  newBatch = new Batch();\n\n  constructor(private http: HttpClient) { }\n\n  public getAllBatches() : Observable<Batch[]> {\n    return this.http.get<Batch[]>(this.baseUrl + 'branches/');\n  }\n\n  create(model: any)\n  {\n    console.log(\"\");\n\n    addHero(hero: Hero): Observable<Hero> {\n      return this.http.post<Hero>(this.heroesUrl, hero, httpOptions)\n        .pipe(\n          catchError(this.handleError('addHero', hero))\n        );\n  \n    return this.http.post<Batch>(this.baseUrl +'create', model).pipe(\n      map((batch: Batch) => {\n        if (batch) {\n          localStorage.setItem('batch', JSON.stringify(batch));\n          this.currentBatchSource.next(batch);\n        }\n        else\n        console.log(\"reached far\");\n      })\n    )\n  }\n\n  search(model: any)\n  {\n    return this.http.get(this.baseUrl + 'branches/', model);\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,EAAEC,aAAa,EAAEC,GAAG,QAAQ,MAAM;AACrD,SAASC,KAAK,QAAQ,iBAAiB;;;AAKvC,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALxB,KAAAC,OAAO,GAAG,6BAA6B;IAC/B,KAAAC,kBAAkB,GAAG,IAAIP,aAAa,CAAQ,CAAC,CAAC;IACxD,KAAAQ,cAAc,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;IACvD,KAAAC,QAAQ,GAAG,IAAIR,KAAK,EAAE;EAEkB;EAEjCS,aAAaA,CAAA;IAClB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAU,IAAI,CAACN,OAAO,GAAG,WAAW,CAAC;EAC3D;EAEAO,MAAMA,CAACC,KAAU;IAEfC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;IAEfC,OAAO,CAACC,IAAI,EAAEC,IAAI,CAAC;IAAEpB,UAAU,GAACoB,IAAI,GAAE;MACpCC,MAAM,EAAC,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAO,IAAI,CAACC,SAAS,EAAEJ,IAAI,EAAEK,WAAW,CAAC,CAC3DC,IAAI,CACHC,UAAU,CAAC,IAAI,CAACC,WAAW,CAAC,SAAS,EAAER,IAAI,CAAC,CAAC,CAC9C;MAELE,MAAM,EAAC,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAQ,IAAI,CAACf,OAAO,GAAE,QAAQ,EAAEQ,KAAK,CAAC,CAACU,IAAI,CAC9DvB,GAAG,CAAE0B,KAAY,IAAI;QACnB,IAAIA,KAAK,EAAE;UACTC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;UACpD,IAAI,CAACpB,kBAAkB,CAACyB,IAAI,CAACL,KAAK,CAAC;SACpC,MAEDZ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC5B,CAAC,CAAC;KAEL;IAEDiB,MAAM,CAACnB,KAAK,EAAEoB,GAAG,CAAC;IAClB;MACE,OAAO,IAAI,CAAC7B,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,OAAO,GAAG,WAAW,EAAEQ,KAAK,CAAC;;EAE3D;;AAtCaX,gBAAgB,C;mBAAhBA,gBAAgB,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBnC,gBAAgB,C;SAAhBA,gBAAgB;EAAAoC,OAAA,EAAhBpC,gBAAgB,CAAAqC,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}