{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class InventoryService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/api/';\n  }\n  getAllBatches() {\n    return this.http.get(this.baseUrl + 'branches/');\n  }\n  register(model) {\n    return this.http.post(this.baseUrl + 'create', model).pipe(map(user => {\n      if (user) {\n        localStorage.setItem('batch', JSON.stringify(user));\n      }\n    }));\n  }\n  search(model) {\n    return this.http.get(this.baseUrl + 'branches/', model);\n  }\n}\nInventoryService.ɵfac = function InventoryService_Factory(t) {\n  return new (t || InventoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nInventoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InventoryService,\n  factory: InventoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["InventoryService","constructor","http","baseUrl","getAllBatches","get","register","model","post","pipe","map","user","localStorage","setItem","JSON","stringify","search","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gogre\\InventorySystem\\client\\src\\app\\_services\\Inventory.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Batch } from '../models/Batch';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n  baseUrl = 'https://localhost:5001/api/'\n\n  constructor(private http: HttpClient) { }\n\n  public getAllBatches() : Observable<Batch[]> {\n    return this.http.get<Batch[]>(this.baseUrl + 'branches/');\n  }\n\n  register(model: any)\n  {\n    return this.http.post(this.baseUrl +'create', model).pipe(\n      map(user => {\n        if (user) {\n          localStorage.setItem('batch', JSON.stringify(user));\n        }\n      }\n        )\n    )\n  }\n\n  search(model: any)\n  {\n    return this.http.get(this.baseUrl + 'branches/', model);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,6BAA6B;EAEC;EAEjCC,aAAaA,CAAA;IAClB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,OAAO,GAAG,WAAW,CAAC;EAC3D;EAEAG,QAAQA,CAACC,KAAU;IAEjB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,OAAO,GAAE,QAAQ,EAAEI,KAAK,CAAC,CAACE,IAAI,CACvDC,GAAG,CAACC,IAAI,IAAG;MACT,IAAIA,IAAI,EAAE;QACRC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;;IAEvD,CAAC,CACE,CACJ;EACH;EAEAK,MAAMA,CAACT,KAAU;IAEf,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,OAAO,GAAG,WAAW,EAAEI,KAAK,CAAC;EACzD;;AAxBWP,gBAAgB,C;mBAAhBA,gBAAgB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBpB,gBAAgB,C;SAAhBA,gBAAgB;EAAAqB,OAAA,EAAhBrB,gBAAgB,CAAAsB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}